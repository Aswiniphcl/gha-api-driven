
on:
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'
      - '.github/workflows/*'
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: "Remote Run"
    runs-on: ubuntu-latest
    
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3
        
      # Configure prisma cloud
      - name: Run Bridgecrew 
        id: Bridgecrew
        uses: bridgecrewio/bridgecrew-action@master 
        env:
          PRISMA_API_URL: https://api4.prismacloud.io
        with:
          api-key: ${{ secrets.BC_API_KEY }}

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        id: fmt
        run: terraform fmt

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        id: init
        run: terraform init
        continue-on-error: false
      
      - name: Terraform Validate
        id: validate
        run: terraform validate
        continue-on-error: false

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request' || github.event_name == 'push'
        run: terraform plan
        continue-on-error: false

      - name: Terraform Validate Status
        if: steps.validate.outcome == 'failure'
        run: exit 1

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1              

      # On push to main, build or change infrastructure according to Terraform configuration files
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply

